---
title: "Study of PK/PD Index for Linezolid specific to CSF infections"
---

## Settings & Dependencies

Load necessary library, dependencies and settings for the project. Just run the block code to generate the same result than the article. Otherwise, if you want to play simulations, you can change the parameters, dosing regimens...

```{r}
#| echo: false

####
## Load dependencies
####
library(mrgsolve)       # Simulation package
library(dplyr)          # Data manipulation
library(tidyr)          # Data manipulation
library(purrr)          # Data manipulation
library(tibble)         # Data manipulation
library(ggplot2)        # Plotting

# If doesn't exist, create a folder for result plots
if (!dir.exists("results")) {
  dir.create("results")
}

# Load the model
model_file <- mread("model/Linezolid_PKPD_model")

####
## Specify your entries
####

# Define the maximum thread number to use for simulations
thread_number = 9

# These PK parameters will be used later in the Rscripts.
# So we define them here, to avoid to hardcode values.
CL = 8.38
V1 = 36.4
FU = 0.69

# Specific model parameters for each strains
model_list <- list(
    # S. Aureus
    SA07982 = param(model_file, PCL=CL, B0 = 5.98, Bmax = 9.76, Kg = 1.04,
                   Emax = 2.16, EC50 = 1.42, Kon = 0.0, MIC = 1.0),
    SA29213 = param(model_file, PCL=CL, B0 = 6.02, Bmax = 9.35, Kg = 1.26,
                    Emax = 2.41, EC50 = 2.28, Kon = 0.014, MIC = 4.0),
    SA01943 = param(model_file, PCL=CL, B0 = 6.09, Bmax = 9.26, Kg = 1.09,
                    Emax = 1.93, EC50 = 1.1, Kon = 0.016, MIC = 2.0),
    SA33591 = param(model_file, PCL=CL, B0 = 5.96, Bmax = 9.46, Kg = 1.02,
                    Emax = 1.52, EC50 = 0.68, Kon = 0.0, MIC = 1.0),
    # S. Epidermidis
    SE17036 = param(model_file, PCL=CL, B0 = 5.81, Bmax = 9, Kg = 0.97,
                   Emax = 1.65, EC50 = 0.51, Kon = 0.021, MIC = 2.0),
    SE18436 = param(model_file, PCL=CL, B0 = 6.28, Bmax = 9.13, Kg = 0.86,
                   Emax = 1.11, EC50 = 0.54, Kon = 0.0, MIC = 2.0),
    SE14990 = param(model_file, PCL=CL, B0 = 5.77, Bmax = 8.98, Kg = 1.07,
                    Emax = 1.54, EC50 = 1.06, Kon = 0.0, MIC = 2.0),
    # S. Capitis
    SC14982 = param(model_file, PCL=CL, B0 = 6.05, Bmax = 9.3, Kg = 0.83,
                   Emax = 1.56, EC50 = 1.34, Kon = 0.0, MIC = 2.0),
    SC19668 = param(model_file, PCL=CL, B0 = 6.38, Bmax = 9.3, Kg = 1.03,
                   Emax = 1.5, EC50 = 0.62, Kon = 0.0, MIC = 2.0)
)

# Specify AMT choosen for fractioned doses
fractioned_daily_AMT <- c(10, 25, 50, 75, 100, 150, 300, 450, 600, 800, 1000, 1200, 1800, 2400, 3000, 4000, 5500, 7000, 8500, 10000)

# Specify the number of simulated patients
i_data <- expand.idata(ID = 1:500)

####
## Execute the main script
####
source("RScripts/main_script.R")

```

## PKPD Plots generation

The code below will generate PK/PD index plots for fCmax/MIC, fAUC/MIC and fT>MIC for CSF target.

```{r}
source("RScripts/pkpd_index_plots_script.R")

csf_plot <- PKPD_index_plots(obs_data = csf_data[["obs_mean"]], 
                             pred_data = csf_data[["pred_data"]], 
                             title = "CSF-derived PKPD Index for Linezolid and specfic to CSF infections" ,
                             file_name = "CSF-derived PKPD Index for Linezolid.png")

mix_plot <- PKPD_index_plots(obs_data = csf_with_plasma_index_data[["obs_mean"]], 
                             pred_data = csf_with_plasma_index_data[["pred_data"]], 
                             title = "Plasma-derived PKPD Index for Linezolid and specfic to CSF infections",
                             file_name = "Plasma-derived PKPD Index for Linezolid.png")
```

## VPCs Plots generation

The code below will generate VPCs plots for fCmax/MIC, fAUC/MIC and fT>MIC for CSF.

```{r}
## Execute VPC scripts
source("RScripts/vpc_script.R")
source("RScripts/vpc_plots_script.R")

## Allow to setup quickly wich VPC data you want to generate
bin_data = csf_vpc_data

## Generate VPC binned data
binned_data <- list(
  cmax_obs = bin_data$obs_data |>
  filter(PKPD_Index == "I1_Cmax") |>
  ntile_obs_bins(20),

  cmax_sim = bin_data$cmax_sim |>
    ntile_sim_bins(20),
  
  auc_obs = bin_data$obs_data |> 
    filter(PKPD_Index == "I2_AUC") |>
    ntile_obs_bins(20),
  
  auc_sim = bin_data$auc_sim |>
    ntile_sim_bins(20),
  
  tmic_obs = bin_data$obs_data |>
    filter(PKPD_Index == "I3_ToverMIC") |>
    cut_obs_bins(0, 100, 20),
  
  tmic_sim = bin_data$tmic_sim |>
    cut_sim_bins(0, 100, 20)
)

## Generate VPC plots
VPC_Plots(binned_data, "VPC - CSF.png")
```

## Target estimations for each indexes

The bloc below will generate a table with different PK/PD targets for bacteriostasis, 1-log kill, and 2-log kill effect.

```{r}
# Generic function to find the index value for a specific target. Based on B0 and pred data.
target_index_efficacity <- list(
  
csf_efficacity = csf_data[["correlation_data"]] |>
  select(c(
    PKPD_Index,
    Target_stasis,
    Target_1LogKill,
    Target_2LogKill,
  )) |>
  pivot_longer(-c(PKPD_Index),
               names_to = "Efficacy Criteria",
               values_to = "TargetIndexValue") |>
  mutate(TargetIndexValue =
           map_chr(TargetIndexValue,
                   ~ if(anyNA(.x)) {return(NA)
                   }
                   else
                   {
                     paste0(
                       round(.x[1, 1], 2), " [", round(.x[1, 3], 2), " - ", round(.x[1, 4], 2), "]"
                     )})) |>
  pivot_wider(names_from = PKPD_Index, values_from = TargetIndexValue),

mix_efficacity = csf_with_plasma_index_data[["correlation_data"]] |>
  select(c(
    PKPD_Index,
    Target_stasis,
    Target_1LogKill,
    Target_2LogKill,
  )) |>
  pivot_longer(-c(PKPD_Index),
               names_to = "Efficacy Criteria",
               values_to = "TargetIndexValue") |>
  mutate(TargetIndexValue =
           map_chr(TargetIndexValue,
                   ~ if(anyNA(.x)) {return(NA)
                   }
                   else
                   {
                     paste0(
                       round(.x[1, 1], 2), " [", round(.x[1, 3], 2), " - ", round(.x[1, 4], 2), "]"
                     )})) |>
  pivot_wider(names_from = PKPD_Index, values_from = TargetIndexValue)
)
```

The bloc below was used to generate comparison plots between the proportion of patient reaching the PKPD targets and the proportion of patients reaching a specific effect for 600mg.

```{r}
source("RScripts/pkpd_index_plots_script_02.R")

csf_plot <- PKPD_target_plots_600mg(obs_data = csf_data[["sim_data"]] |> 
                                  filter(DoseGroup == "fractioned_12h" & AMT == 1200), 
                                pred_data = csf_data[["pred_data"]],
                                effect = 0,
                                auc_target = 30,
                                tmic_target = 63,
                                title = "LNZ PKPD Index for CSF" ,
                                filename = "LNZ PKPD Indexes for CSF target.png")

csf_plot2 <- PKPD_effect_plots_600mg(obs_data = csf_data[["sim_data"]] |> 
                                  filter(DoseGroup == "fractioned_12h" & AMT == 1200), 
                                effect = 0,
                                auc_target = 30,
                                tmic_target = 63,
                                pred_data = csf_data[["pred_data"]], 
                                title = "LNZ PKPD Index for CSF" ,
                                filename = "LNZ PKPD Indexes for CSF target.png")

csf_plot + csf_plot2 + plot_layout(nrow = 2, guides = 'collect') +
  plot_annotation(
    theme = theme(
      plot.margin = margin(t = 20, r = 40, b = 20, l = 40), 
    ))

ggsave(file.path(getwd(), "results", "600m_atteignment.png"), width = 8, height = 4, dpi = 1200)

```